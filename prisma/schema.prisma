generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id           String        @id @default(uuid())
  name         String
  slug         String?       @unique
  description  String?
  inviteLink   String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  leaderId     String?
  confirmation Confirmation?
  leader       Guest?        @relation("GroupLeader", fields: [leaderId], references: [id])
  guests       Guest[]       @relation("GroupMembers")
}

model Guest {
  id            String        @id @default(uuid())
  name          String
  slug          String?       @unique
  email         String?
  phone         String?
  inviteLink    String        @unique
  groupId       String?
  giftSize      String?
  giftQuantity  Int?
  isChild       Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  confirmation  Confirmation?
  leadingGroups Group[]       @relation("GroupLeader")
  group         Group?        @relation("GroupMembers", fields: [groupId], references: [id])
}

model Confirmation {
  id               String    @id @default(uuid())
  confirmed        Boolean   @default(false)
  guestId          String?   @unique
  groupId          String?   @unique
  numberOfPeople   Int?
  confirmationDate DateTime?
  notes            String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  notifyEmail      Boolean   @default(false)
  group            Group?    @relation(fields: [groupId], references: [id])
  guest            Guest?    @relation(fields: [guestId], references: [id])
  reminder         Reminder?
}

model Reminder {
  id             String       @id @default(uuid())
  confirmationId String       @unique
  scheduledFor   DateTime
  sent           Boolean      @default(false)
  sentAt         DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  confirmation   Confirmation @relation(fields: [confirmationId], references: [id])
}
